// -*- Mode: js -*-

interactive("fill-domain", "Fill the minibuffer with the current domain.",
            function (I) {
                var field = I.minibuffer.input_element;
                var paths = String(I.window.content.location).split('/');
                var domain = paths[0] + "/" + paths[1] + "/" + paths[2] + "/";
                field.value = domain;
            });

define_key(minibuffer_keymap, "C-/", "fill-domain");

interactive("tinyurl", "Create a TinyURL for the current URL",
            function(I) {
                I.window.content.location.href = 'http://tinyurl.com/create.php?url=' +
                    encodeURIComponent(I.window.content.location.href);
            });

interactive("stache", "Mustachify",
            function(I) {
                I.window.content.location.href = 'http://mustachify.me/?src=' +
                    encodeURIComponent(I.window.content.location.href);
            });

define_webjump("hub", "http://github.com/search?q=%s");
define_webjump("w", "http://www.google.com/search?q=wikipedia+%s&btnI=I'm Feeling Lucky");
define_webjump("emacs", "http://www.google.com/cse?cx=004774160799092323420%3A6-ff2s0o6yi&q=%s&sa=Search");
define_webjump("mvn", "http://jarvana.com/jarvana/search?search_type=project&project=%s");
define_webjump("rfc", "http://www.ietf.org/rfc/rfc%s.txt");
define_webjump("marmalade", "http://marmalade-repo.org/packages?q=%s");

define_webjump("wondermark", "http://www.ohnorobot.com/index.pl?s=%s&comic=148&show=advanced&b=1&t=1");
define_webjump("achewood", "http://www.ohnorobot.com/index.pl?s=%s&comic=636&show=advanced&b=1&t=1");
define_webjump("dino", "http://www.ohnorobot.com/index.pl?s=%s&comic=23&show=advanced&b=1&t=1");

add_delicious_webjumps("dmi3y");

key_bindings_ignore_capslock = true;
hints_display_url_panel = true;
url_remoting_fn = load_url_in_new_buffer;
url_completion_use_history = true;
url_completion_use_bookmarks = false;
can_kill_last_buffer = false;
download_buffer_automatic_open_target = OPEN_NEW_BUFFER_BACKGROUND;

register_user_stylesheet(
    "data:text/css," +
        escape (".topsearch input { width: 2em; };"));

register_user_stylesheet(
    "data:text/css,"+
        escape("@-moz-document domain(agilezen.com) {#progress a.current { font-weight: bold;" +
               " text-decoration: underline;}}"));

interactive("toggle-stylesheets",
            "Toggle whether conkeror uses style sheets (CSS) for the " +
            "current buffer.  It is sometimes useful to turn off style " +
            "sheets when the web site makes obnoxious choices.",
            function(I) {
                var s = I.buffer.document.styleSheets;
                for (var i = 0; i < s.length; i++)
                    s[i].disabled = !s[i].disabled;
            });

require("page-modes/google-search-results.js");

user_pref('extensions.mozrepl.autoStart', true);

interactive("readability_arc90",
            "Readability is a simple tool that makes reading on the web more enjoyable by removing the clutter around what you are reading",
            function readability_arc90(I) {
                var document = I.window.buffers.current.document;

                var readConvertLinksToFootnotes = false;
                var readStyle = 'style-newspaper';
                var readSize = 'size-medium';
                var readMargin = 'margin-wide';

                var _readability_readStyle = document.createElement('SCRIPT');
                _readability_readStyle.text = 'var readStyle = \'' + readStyle + '\';';
                document.getElementsByTagName('head')[0].appendChild(_readability_readStyle);

                var _readability_readSize = document.createElement('SCRIPT');
                _readability_readSize.text = 'var readSize = \'' + readSize + '\';';
                document.getElementsByTagName('head')[0].appendChild(_readability_readSize);

                var _readability_readMargin = document.createElement('SCRIPT');
                _readability_readMargin.text = 'var readMargin = \'' + readMargin + '\';';
                document.getElementsByTagName('head')[0].appendChild(_readability_readMargin);

                var _readability_readConvertLinksToFootnotes = document.createElement('SCRIPT');
                _readability_readConvertLinksToFootnotes.text = 'var readConvertLinksToFootnotes = ' + readConvertLinksToFootnotes + ';';
                document.getElementsByTagName('head')[0].appendChild(_readability_readConvertLinksToFootnotes);

                var _readability_script = document.createElement('script')
                _readability_script.type='text/javascript'
                _readability_script.src='http://lab.arc90.com/experiments/readability/js/readability.js?x='+(Math.random())
                document.documentElement.appendChild(_readability_script)

                var _readability_css = document.createElement('link')
                _readability_css.rel = 'stylesheet'
                _readability_css.href = 'http://lab.arc90.com/experiments/readability/css/readability.css'
                _readability_css.type = 'text/css'
                _readability_css.media = 'all'
                document.documentElement.appendChild(_readability_css)

                var _readability_print_css = document.createElement('link')
                _readability_print_css.rel = 'stylesheet'
                _readability_print_css.href = 'http://lab.arc90.com/experiments/readability/css/readability-print.css'
                _readability_print_css.media = 'print'
                _readability_print_css.type = 'text/css'
                document.getElementsByTagName('head')[0].appendChild(_readability_print_css)
            });

define_key(content_buffer_normal_keymap, "z", "readability_arc90");

if ('@hyperstruct.net/mozlab/mozrepl;1' in Cc) {
    var mozrepl = Cc['@hyperstruct.net/mozlab/mozrepl;1']
        .getService(Ci.nsIMozRepl);
    if (! mozrepl.isActive())
        mozrepl.start(4242);
}

// add favicons
require("favicon.js");
add_hook("mode_line_hook", mode_line_adder(buffer_icon_widget), true);
read_buffer_show_icons = true;

// we'd like to see the # of buffers being loaded
add_hook("mode_line_hook", mode_line_adder(loading_count_widget), true);

// but really we'd also like to know how many buffers
// are present and which is the current
add_hook("mode_line_hook", mode_line_adder(buffer_count_widget), true);

/// qrcode
interactive("qrcode", "Open QR code of current URL.",
            function qrcode(I) {
                I.window.content.location = 'http://chart.apis.google.com/chart?cht=qr&chs=300x300&chl=' +
                    encodeURIComponent(I.window.content.location.href);
            });

define_key(content_buffer_normal_keymap, "Z", "qrcode");

// cookies

require("cookie.js"); // hopefully this would go in modules/cookie.js so this would not be needed

function for_each_host_cookie(host, fn) {
    var cookies = cookie_manager.getCookiesFromHost(host);
    while (cookies.hasMoreElements()) {
        var cookie = cookies.getNext().QueryInterface(Components.interfaces.nsICookie2);
        fn(cookie);
    }
}

function clear_host_cookies(host) {
    for_each_host_cookie(host,
                         function (cookie) {
                             cookie_manager.remove(cookie.host, cookie.name,
                                                   cookie.path, false);
                         });
}

interactive("clear-site-cookies", "Delete all cookies for the current site",
            function (I) {
                var host = I.buffer.current_uri.host;
                clear_host_cookies(host);
                I.minibuffer.message("Cookies cleared for " + host);
            });

var user_agents = { "conkeror": "Mozilla/5.0 (X11; Linux x86_64; rv:8.0.1) " +
                    "Gecko/20100101 conkeror/1.0pre",
                  "chromium": "Mozilla/5.0 (X11; U; Linux x86_64; en-US) " +
                    "AppleWebKit/534.3 (KHTML, like Gecko) Chrome/6.0.472.63" +
                    " Safari/534.3",
                  "firefox": "Mozilla/5.0 (X11; Linux x86_64; rv:8.0.1) " +
                  "Gecko/20100101 Firefox/8.0.1",
                  "android": "Mozilla/5.0 (Linux; U; Android 2.2; en-us; " +
                  "Nexus One Build/FRF91) AppleWebKit/533.1 (KHTML, like " +
                  "Gecko) Version/4.0 Mobile Safari/533.1"};

var agent_completer = prefix_completer($completions = Object.keys(user_agents));

interactive("user-agent", "Pick a user agent from the list of presets",
            function(I) {
                var ua = (yield I.window.minibuffer.read(
                    $prompt = "Agent:",
                    $completer = agent_completer));
                set_user_agent(user_agents[ua]);
            });

var history = Components.classes["@mozilla.org/browser/nav-history-service;1"]
    .getService(Components.interfaces.nsIBrowserHistory);
